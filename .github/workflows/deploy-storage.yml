name: Build and Deploy Storage Service to k3s

on:
  push:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_BACKEND: ghcr.io/${{ github.repository }}-storage
  NAMESPACE: storage-service

jobs:
  build-and-deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and push Backend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE_BACKEND }}:latest

      - name: Set up kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_B64 }}" | base64 -d > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Ensure namespace exists
        run: |
          kubectl create namespace ${{ env.NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -

      - name: Apply Backend Deployment Manifest
        run: |
          cat <<EOF | kubectl apply -n ${{ env.NAMESPACE }} -f -
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: storage-backend-deployment
            labels:
              app: storage-backend
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: storage-backend
            template:
              metadata:
                labels:
                  app: storage-backend
              spec:
                imagePullSecrets:
                  - name: ghcr-secret
                containers:
                  - name: storage-backend
                    image: ${{ env.IMAGE_BACKEND }}:latest
                    imagePullPolicy: Always
                    ports:
                      - containerPort: 3005
                    env:
                      - name: PORT
                        value: "3005"
                      - name: NODE_ENV
                        value: "production"
                      - name: UPLOAD_PATH
                        value: "/app/uploads"
                    command: ["/bin/sh", "-c"]
                    args:
                      - npm run start:prod
                    volumeMounts:
                      - name: storage-uploads-volume
                        mountPath: /app/uploads
                volumes:
                  - name: storage-uploads-volume
                    hostPath:
                      path: /mnt/storage-service/uploads
                      type: DirectoryOrCreate
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: storage-backend-service
          spec:
            type: LoadBalancer
            selector:
              app: storage-backend
            ports:
              - port: 3005
                targetPort: 3005
                protocol: TCP
          EOF

      - name: Update Backend image and rollout
        run: |
          kubectl set image deployment/storage-backend-deployment storage-backend=${{ env.IMAGE_BACKEND }}:latest -n ${{ env.NAMESPACE }}
          kubectl rollout status deployment/storage-backend-deployment -n ${{ env.NAMESPACE }}